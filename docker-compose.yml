# version: '3.8' # It's good practice to use a more recent version like 3.8
services:

  #PHP Service (Laravel)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      # --- ADDED: Mount the shared data volume into the Laravel container ---
      - ./shared_data:/var/www/shared_data
    networks:
      - app-network
    # --- ADDED: Make sure FastAPI and the DB are running before Laravel starts ---
    depends_on:
      - db
      - fastapi

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: unifiedtransform
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # --- NEW SERVICE: FastAPI ---
  fastapi:
    build:
      context: ./fast_api  # Tells Docker to look in the fast_api folder
      dockerfile: Dockerfile # Specifies the Dockerfile to use
    container_name: fastapi
    restart: unless-stopped
    tty: true
    ports:
      - "8000:8000" # Expose port 8000 for the API
    volumes:
      # --- ADDED: Mount the SAME shared data volume into the FastAPI container ---
      - ./shared_data:/shared_files
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local